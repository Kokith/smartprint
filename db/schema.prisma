// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

enum FournisseurType {
  IMPORT
  DIVERS
  LOCAL
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  nom       String
  email     String   @unique
  contact   String
  role      UserRole @default(USER)
  mdp       String
  photo     String?

  societeId Int
  societe   Societe @relation(fields: [societeId], references: [id])


  tokens   Token[]
  sessions Session[]
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?

  user   User? @relation(fields: [userId], references: [id])
  userId Int?
}

model Token {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  hashedToken String
  type        String
  // See note below about TokenType enum
  // type        TokenType
  expiresAt   DateTime
  sentTo      String

  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@unique([hashedToken, type])
}

model Societe {
  id        Int     @id @default(autoincrement())
  gerant    String
  adresse   String
  banque    String
  mobile    String
  signature String?
  rcs       String
  stat      String
  nif       String

  users   User[]
  charges Charge[]
}

model Client {
  id      Int    @id @default(autoincrement())
  nom     String @unique
  nif     String
  stat    String
  adresse String
  email   String
  contact String
}

model Fournisseur {
  id      Int             @id @default(autoincrement())
  nom     String          @unique
  nif     String
  stat    String
  adresse String
  email   String
  contact String
  type    FournisseurType
}

model Charge {
  id          Int      @id @default(autoincrement())
  designation String
  description String
  prix        Int
  createdAt   DateTime @default(now())

  societeId Int
  societe   Societe @relation(fields: [societeId], references: [id])
}

// NOTE: It's highly recommended to use an enum for the token type
//       but enums only work in Postgres.
//       See: https://blitzjs.com/docs/database-overview#switch-to-postgresql
// enum TokenType {
//   RESET_PASSWORD
// }
